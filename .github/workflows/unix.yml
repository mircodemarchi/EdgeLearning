name: Unix

on:
  push:
    branches:
      - main
  pull_request:

env:
  BUILD_TYPE: Release

jobs:
  build:

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # Without MLPACK
          - {
            name: "macOS 11.0 AppleClang [NO MLPACK]",
            mlpack: false,
            os: macos-11.0,
            cxx: "clang++",
            c: "clang"
          }
          - {
            name: "macOS 11.0 GCC 10 [NO MLPACK]",
            mlpack: false,
            os: macos-11.0,
            cxx: "g++-10",
            c: "gcc-10"
          }
          - {
            name: "Ubuntu 22.04 Clang 11 [NO MLPACK]",
            mlpack: false,
            os: ubuntu-22.04,
            cxx: "clang++-11",
            c: "clang-11"
          }
          - {
            name: "Ubuntu 22.04 GCC 10 [NO MLPACK]",
            mlpack: false,
            os: ubuntu-22.04,
            cxx: "g++-10",
            c: "gcc-10"
          }
          # With MLPACK
          # - {
          #   name: "macOS 11.0 AppleClang [MLPACK]",
          #   mlpack: true,
          #   os: macos-11.0,
          #   cxx: "clang++",
          #   c: "clang"
          # }
          # - {
          #   name: "macOS 10.15 GCC 9 [MLPACK]",
          #   mlpack: true,
          #   os: macos-10.15,
          #   cxx: "g++-9",
          #   c: "gcc-9"
          # }
          - {
            name: "Ubuntu 22.04 Clang 11 [MLPACK]",
            mlpack: true,
            os: ubuntu-22.04,
            cxx: "clang++-11",
            c: "clang-11"
          }
          - {
            name: "Ubuntu 22.04 GCC 10 [MLPACK]",
            mlpack: true,
            os: ubuntu-22.04,
            cxx: "g++-10",
            c: "gcc-10"
          }

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Get macOS Concurrency
      if: runner.os == 'macOS'
      run: |
        echo NPROC="sysctl -n hw.ncpu" >> $GITHUB_ENV
        echo "Running on $(sysctl -n hw.ncpu) threads ..."

    - name: Get Linux Concurrency
      if: runner.os == 'Linux'
      run: |
        echo NPROC="nproc" >> $GITHUB_ENV
        echo "Running on $(nproc) threads ..."

    - name: Set Up macOS Dependencies
      if: runner.os == 'macOS'
      run: |
        brew install gcc@10 python3
        export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig
        sudo easy_install pip
        sudo pip3 install --upgrade pip
        sudo pip3 install pytest numpy

    - name: Set Up Linux Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update && sudo apt upgrade -y && sudo apt install -y cmake pkg-config clang-11 g++-10 python3-pip python3-dev
        sudo pip3 install pytest numpy

    - name: Set Up macOS MLPACK
      if: runner.os == 'macOS' && matrix.config.mlpack
      run: |
        brew install mlpack
    
    - name: Set Up Linux MLPACK
      if: runner.os == 'Linux' && matrix.config.mlpack
      run: |
        sudo apt install -y libmlpack-dev mlpack-bin libensmallen-dev

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} -DCMAKE_C_COMPILER=${{matrix.config.c}} -DENABLE_MLPACK=${{matrix.config.mlpack}} -DBUILD_PYTHON=ON

    - name: Build All
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --parallel $($NPROC)

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -j $($NPROC)
